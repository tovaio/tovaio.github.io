{"version":3,"sources":["Content.module.scss","GameOfLife.tsx","Arrow-down.svg","Banner.tsx","LinkedInFill.svg","LinkedInOutline.svg","GitHubFill.svg","GitHubOutline.svg","ResumeFill.svg","ResumeOutline.svg","riskystratsIcon.png","SocialSavageIcon.png","4RealIcon.png","HIMCMIcon.png","DMTCertificate.jpg","Content.tsx","App.tsx","AppContainer.tsx","serviceWorker.ts","index.tsx","Banner.module.scss","GameOfLife.module.scss"],"names":["module","exports","mod","n","m","generateGrid","nRows","nCols","rows","i","push","Array","fill","spawnCoords","GameOfLife","props","useState","grid","setGrid","useEffect","simulationInterval","setInterval","oldGrid","newGrid","j","nNeighbors","oi","oj","ni","nj","tickTime","spawnInterval","pi","Math","floor","random","pj","factor","produce","forEach","spawnTime","clearInterval","transitionTime","className","styles","container","style","gridTemplateRows","cellSize","gridTemplateColumns","width","height","map","row","val","classNames","cell","on","transition","transitionTimingFunction","HighlightSpan","children","Banner","isHovering","setIsHovering","golDim","isMobile","banner","bannerBackground","bannerContainer","onMouseEnter","onMouseOut","onClick","document","getElementById","scrollIntoView","behavior","block","inline","src","arrowDown","alt","LogoButton","logoButton","href","target","rel","outlineSrc","label","fillSrc","FlexRow","flexRow","Header","Section","section","title","Line","textIndent","ProjectPanel","projectPanel","imgSrc","links","url","color","textDecoration","projectPanelButton","Content","id","content","linkedInFill","linkedInOutline","gitHubFill","gitHubOutline","resumeFill","resumeOutline","riskystratsIcon","socialSavageIcon","fourRealIcon","dmtCertificate","himcmIcon","App","AppContainer","Boolean","window","location","hostname","match","ReactDOM","render","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"6GACAA,EAAOC,QAAU,CAAC,QAAU,yBAAyB,QAAU,yBAAyB,QAAU,yBAAyB,WAAa,4BAA4B,aAAe,8BAA8B,mBAAqB,sC,mMCKhOC,EAAM,SAACC,EAAWC,GACrB,OAASD,EAAIC,EAAKA,GAAKA,GAGpBC,EAAe,SAACC,EAAeC,GAEpC,IADA,IAAMC,EAAO,GACJC,EAAI,EAAGA,EAAIH,EAAOG,IAC1BD,EAAKE,KAAKC,MAAMJ,GAAOK,MAAK,IAE7B,OAAOJ,GAYFK,EAAc,CACnB,CAAC,EAAG,GACJ,CAAC,EAAG,GACJ,CAAC,EAAG,GACJ,EAAE,EAAG,GACL,EAAE,EAAG,IA8FSC,EA3F+B,SAACC,GAC9C,MAA0BC,oBAAS,kBAAMX,EAAaU,EAAMT,MAAOS,EAAMR,UAAzE,mBAAQU,EAAR,KAAcC,EAAd,KAEAC,qBAAU,WACT,IA8CMC,EAAqBC,aA9CL,WACrBH,GAAQ,SAAAI,GAGP,IAFA,IAAMC,EAAUlB,EAAaU,EAAMT,MAAOS,EAAMR,OAEvCE,EAAI,EAAGA,EAAIM,EAAMT,MAAOG,IAChC,IAAK,IAAIe,EAAI,EAAGA,EAAIT,EAAMR,MAAOiB,IAAK,CAGrC,IADA,IAAIC,EAAa,EACRC,GAAM,EAAGA,EAAK,EAAGA,IACzB,IAAK,IAAIC,GAAM,EAAGA,EAAK,EAAGA,IACzB,GAAW,IAAPD,GAAmB,IAAPC,EAAhB,CAEA,IAAMC,EAAK1B,EAAIO,EAAIiB,EAAIX,EAAMT,OACvBuB,EAAK3B,EAAIsB,EAAIG,EAAIZ,EAAMR,OAC7BkB,GAAeH,EAAQM,GAAIC,GAAO,EAAI,GAInCP,EAAQb,GAAGe,KAAsB,IAAfC,GAAmC,IAAfA,KACrCH,EAAQb,GAAGe,IAAsB,IAAfC,KACvBF,EAAQd,GAAGe,IAAK,GAKnB,OAAOD,OAqB6CR,EAAMe,UACtDC,EAAgBV,aAlBL,WAEhB,IAAMW,EAAKC,KAAKC,MAAMD,KAAKE,SAAWpB,EAAMT,OACtC8B,EAAKH,KAAKC,MAAMD,KAAKE,SAAWpB,EAAMR,OACtC8B,EAAM,UAAK,EAAMJ,KAAKC,MAAsB,EAAhBD,KAAKE,WAEvCjB,GAAQ,SAAAI,GACP,OAAOgB,YAAQhB,GAAS,SAAAC,GACvBV,EAAY0B,SAAQ,YAAiB,IAAD,mBAAbb,EAAa,KAATC,EAAS,KAC7BlB,EAAIP,EAAI8B,EAAKN,EAAKW,EAAQtB,EAAMT,OAChCkB,EAAItB,EAAIkC,EAAKT,EAAKU,EAAQtB,EAAMR,OACtCgB,EAAQd,GAAGe,IAAK,aAOwBT,EAAMyB,WAElD,OAAO,WACNC,cAAcrB,GACdqB,cAAcV,MAEb,CAAChB,EAAMT,MAAOS,EAAMR,MAAOQ,EAAMe,SAAUf,EAAMyB,YAEpD,IAAME,EAAiB3B,EAAMe,SAAW,IAExC,OACC,qBACCa,UAAWC,IAAOC,UAClBC,MAAK,aACJC,iBAAiB,UAAD,OAAYhC,EAAMT,MAAlB,aAA4BS,EAAMiC,SAAlC,KAChBC,oBAAoB,UAAD,OAAYlC,EAAMR,MAAlB,aAA4BQ,EAAMiC,SAAlC,KACnBE,MAAO,QACPC,OAAO,GAAD,OAAKpC,EAAMT,MAAQS,EAAMR,MAAQ,IAAjC,OACHQ,EAAM+B,OAPX,SAUE7B,EAAKmC,KAAI,SAACC,EAAK5C,GAAN,OACT4C,EAAID,KAAI,SAACE,EAAK9B,GAAN,aACP,qBAECmB,UAAWY,KAAU,mBACnBX,IAAOY,MAAO,GADK,cAEnBZ,IAAOa,GAAKH,GAFO,IAIrBR,MAAO,CACNY,WAAW,oBAAD,OAAsBhB,EAAtB,yBAAqDA,EAArD,KACViB,yBAA0B,WAR5B,UACSlD,EADT,YACce,a,gBC9GJ,MAA0B,uCCQnCoC,EAA0B,SAAA7C,GAC5B,OACI,+BACKA,EAAM8C,YA8DJC,EAzDU,WAErB,MAAsC9C,oBAAS,GAA/C,mBAAQ+C,EAAR,KAAoBC,EAApB,KAgBMC,EAASC,WAAW,GAAK,GAE/B,OACI,sBAAKvB,UAAWC,IAAOuB,OAAvB,UACI,qBAAKxB,UAAWC,IAAOwB,iBAAvB,SACI,cAAC,EAAD,CACI9D,MAAO2D,EACP1D,MAAO0D,EACPjB,SAAU,MACVlB,SAAU,IACVU,UAAW,QAGnB,sBACIG,UAAWC,IAAOyB,gBADtB,UAII,0CACY,cAAC,EAAD,iBADZ,OACiD,cAAC,EAAD,iBADjD,eAC8F,uBAD9F,uBAEwB,cAAC,EAAD,iBAFxB,OAIA,wBACIC,aAAc,WAAON,GAAc,IACnCO,WAAY,WAAOP,GAAc,IACjCQ,QAAS,WACWC,SAASC,eAAe,WAC/BC,eAAe,CAACC,SAAU,SAAUC,MAAO,QAASC,OAAQ,aAL7E,2BAUEZ,WAAmF,KAAxE,qBAAKa,IAAKC,EAAWC,IAAI,GAAGtC,UAAWoB,EAAanB,IAAOa,GAAK,Y,gBCjE9E,MAA0B,yCCA1B,MAA0B,4CCA1B,MAA0B,uCCA1B,MAA0B,0CCA1B,MAA0B,uCCA1B,MAA0B,0CCA1B,MAA0B,4CCA1B,MAA0B,6CCA1B,MAA0B,sCCA1B,MAA0B,sCCA1B,MAA0B,2CCwBnCyB,EAAwC,SAAAnE,GAC1C,OACI,sBAAK4B,UAAWC,IAAOuC,WAAvB,UACI,8BACI,oBAAGC,KAAMrE,EAAMqE,KAAMC,OAAO,SAASC,IAAI,sBAAzC,UACI,qBAAKP,IAAKhE,EAAMwE,WAAYN,IAAKlE,EAAMyE,QACvC,qBAAKT,IAAKhE,EAAM0E,QAASR,IAAI,UAGrC,4BAAIlE,EAAMyE,YAKhBE,EAAoB,SAAA3E,GACtB,OACI,qBAAK4B,UAAWC,IAAO+C,QAAvB,SACK5E,EAAM8C,YAKb+B,EAAmB,SAAA7E,GACrB,OACI,6BACKA,EAAM8C,YASbgC,EAAkC,SAAA9E,GACpC,OACI,sBAAK4B,UAAWC,IAAOkD,QAAvB,UACI,eAAC,EAAD,gBAAW/E,EAAMgF,MAAjB,QACChF,EAAM8C,aAKbmC,EAAiB,SAAAjF,GACnB,OACI,mBAAG+B,MAAO,CAACmD,WAAY,OAAvB,SACKlF,EAAM8C,YAWbqC,EAA4C,SAAAnF,GAC9C,OACI,sBAAK4B,UAAWC,IAAOuD,aAAvB,UACI,qBAAKpB,IAAKhE,EAAMqF,OAAQnB,IAAKlE,EAAMgF,QACnC,oCAAOhF,EAAMgF,MAAb,QACA,4BAAIhF,EAAM8C,WAEN9C,EAAMsF,MAAMjD,KAAI,mCAAEkD,EAAF,KAAOd,EAAP,YACZ,mBAAGJ,KAAMkB,EAAKxD,MAAO,CAACyD,MAAO,QAASC,eAAgB,QAASnB,OAAO,SAASC,IAAI,sBAAnF,SACI,qBAAK3C,UAAWC,IAAO6D,mBAAvB,SACKjB,aAyGdkB,EA/FW,WACtB,OACI,sBACIC,GAAG,UACHhE,UAAWC,IAAOgE,QAFtB,UAII,eAAC,EAAD,CAASb,MAAM,WAAf,UACI,cAAC,EAAD,mPAIA,cAAC,EAAD,mLAKJ,cAAC,EAAD,CAASA,MAAM,cAAf,SACI,eAAC,EAAD,WACI,cAAC,EAAD,CACIP,MAAM,WACNC,QAASoB,EACTtB,WAAYuB,EACZ1B,KAAK,8DAET,cAAC,EAAD,CACII,MAAM,SACNC,QAASsB,EACTxB,WAAYyB,EACZ5B,KAAK,mCAET,cAAC,EAAD,CACII,MAAM,eACNC,QAASwB,EACT1B,WAAY2B,EACZ9B,KAAK,4FAIjB,cAAC,EAAD,CAASW,MAAM,WAAf,SACI,eAAC,EAAD,WACI,eAAC,EAAD,CACIK,OAAQe,EACRpB,MAAM,eACNM,MAAO,CACH,CAAC,uCAAwC,gBACzC,CAAC,wCAAyC,mBAC1C,CAAC,+CAAgD,oBANzD,8CASqC,mBAAGjB,KAAK,sDAAR,uBATrC,qBAUI,uBAAK,uBACL,iEAEJ,eAAC,EAAD,CACIgB,OAAQgB,EACRrB,MAAM,gBACNM,MAAO,CACH,CAAC,0CAA2C,UAC5C,CAAC,4CAA6C,YALtD,mFASI,uBAAK,uBACL,0FAEJ,eAAC,EAAD,CACID,OAAQiB,EACRtB,MAAM,QACNM,MAAO,CACH,CAAC,kDAAmD,UACpD,CAACiB,EAAgB,gBALzB,sEASI,uBAAK,uBACL,4HAEJ,eAAC,EAAD,CACIlB,OAAQmB,EACRxB,MAAM,kBACNM,MAAO,CACH,CAAC,6CAA8C,cAC/C,CAAC,qDAAsD,gBAL/D,wFASI,uBAAK,uBACL,wHC5KTmB,G,MATO,WACrB,OACC,qCACC,cAAC,EAAD,IACA,cAAC,EAAD,SCCYC,EARgB,WAC9B,OACC,cAAC,mBAAD,UACC,cAAC,EAAD,OCKiBC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2D,YCVNC,IAASC,OAAO,cAAC,EAAD,IAAkBvD,SAASC,eAAe,SDiIpD,kBAAmBuD,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,iB,kBE1InBtI,EAAOC,QAAU,CAAC,iBAAmB,iCAAiC,gBAAkB,gCAAgC,OAAS,uBAAuB,GAAK,qB,kBCA7JD,EAAOC,QAAU,CAAC,UAAY,8BAA8B,KAAO,yBAAyB,GAAK,0B","file":"static/js/main.4d25b47c.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"Content_content__Uvwmx\",\"section\":\"Content_section__xjIkK\",\"flexRow\":\"Content_flexRow__DNUq9\",\"logoButton\":\"Content_logoButton__1JUBX\",\"projectPanel\":\"Content_projectPanel__1-bze\",\"projectPanelButton\":\"Content_projectPanelButton__vyzWa\"};","import React, { useState, useEffect } from 'react';\r\nimport produce from 'immer';\r\nimport classNames from 'classnames';\r\n\r\nimport styles from './GameOfLife.module.scss';\r\n\r\nconst mod = (n: number, m: number): number => {\r\n  \treturn ((n % m) + m) % m;\r\n};\r\n\r\nconst generateGrid = (nRows: number, nCols: number): boolean[][] => {\r\n\tconst rows = [];\r\n\tfor (let i = 0; i < nRows; i++) {\r\n\t\trows.push(Array(nCols).fill(false));\r\n\t}\r\n\treturn rows;\r\n}\r\n\r\ninterface GameOfLifeProps {\r\n\tnRows: number,\r\n\tnCols: number,\r\n\tcellSize: string,\r\n\ttickTime: number,\r\n\tspawnTime: number,\r\n\tstyle?: React.CSSProperties\r\n}\r\n\r\nconst spawnCoords = [\r\n\t[0, 0],\r\n\t[0, 1],\r\n\t[0, 2],\r\n\t[-1, 2],\r\n\t[-2, 1]\r\n];\r\n\r\nconst GameOfLife: React.FC<GameOfLifeProps> = (props) => {\r\n\tconst [ grid, setGrid ] = useState(() => generateGrid(props.nRows, props.nCols));\r\n\r\n\tuseEffect(() => {\r\n\t\tconst runSimulation = () => {\r\n\t\t\tsetGrid(oldGrid => {\r\n\t\t\t\tconst newGrid = generateGrid(props.nRows, props.nCols);\r\n\t\t\t\t\r\n\t\t\t\tfor (let i = 0; i < props.nRows; i++) {\r\n\t\t\t\t\tfor (let j = 0; j < props.nCols; j++) {\r\n\t\t\t\t\t\t// count neighbors\r\n\t\t\t\t\t\tlet nNeighbors = 0;\r\n\t\t\t\t\t\tfor (let oi = -1; oi < 2; oi++) {\r\n\t\t\t\t\t\t\tfor (let oj = -1; oj < 2; oj++) {\r\n\t\t\t\t\t\t\t\tif (oi === 0 && oj === 0) continue;\r\n\t\r\n\t\t\t\t\t\t\t\tconst ni = mod(i + oi, props.nRows);\r\n\t\t\t\t\t\t\t\tconst nj = mod(j + oj, props.nCols);\r\n\t\t\t\t\t\t\t\tnNeighbors += (oldGrid[ni][nj]) ? 1 : 0;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\tif ((oldGrid[i][j] && (nNeighbors === 2 || nNeighbors === 3))\r\n\t\t\t\t\t\t\t|| (!oldGrid[i][j] && (nNeighbors === 3))) {\r\n\t\t\t\t\t\t\tnewGrid[i][j] = true;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\treturn newGrid;\r\n\t\t\t});\r\n\t\t}\r\n\t\r\n\t\tconst runSpawn = () => {\r\n\t\t\t// pick a random pivot coordinate\r\n\t\t\tconst pi = Math.floor(Math.random() * props.nRows);\r\n\t\t\tconst pj = Math.floor(Math.random() * props.nCols);\r\n\t\t\tconst factor = (-1) ** Math.floor(Math.random() * 2);\r\n\t\r\n\t\t\tsetGrid(oldGrid => {\r\n\t\t\t\treturn produce(oldGrid, newGrid => {\r\n\t\t\t\t\tspawnCoords.forEach(([ oi, oj ]) => {\r\n\t\t\t\t\t\tconst i = mod(pi + oi * factor, props.nRows);\r\n\t\t\t\t\t\tconst j = mod(pj + oj * factor, props.nCols);\r\n\t\t\t\t\t\tnewGrid[i][j] = true;\r\n\t\t\t\t\t});\r\n\t\t\t\t});\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\tconst simulationInterval = setInterval(runSimulation, props.tickTime);\r\n\t\tconst spawnInterval = setInterval(runSpawn, props.spawnTime);\r\n\r\n\t\treturn () => {\r\n\t\t\tclearInterval(simulationInterval);\r\n\t\t\tclearInterval(spawnInterval);\r\n\t\t}\r\n\t}, [props.nRows, props.nCols, props.tickTime, props.spawnTime]);\r\n\r\n\tconst transitionTime = props.tickTime / 1000;\r\n\r\n\treturn (\r\n\t\t<div\r\n\t\t\tclassName={styles.container}\r\n\t\t\tstyle={{\r\n\t\t\t\tgridTemplateRows: `repeat(${props.nRows}, ${props.cellSize})`,\r\n\t\t\t\tgridTemplateColumns: `repeat(${props.nCols}, ${props.cellSize})`,\r\n\t\t\t\twidth: '102vw',\r\n\t\t\t\theight: `${props.nRows / props.nCols * 102}vw`,\r\n\t\t\t\t...props.style\r\n\t\t\t}}\r\n\t\t>\r\n\t\t\t{grid.map((row, i) => \r\n\t\t\t\trow.map((val, j) => (\r\n\t\t\t\t\t<div \r\n\t\t\t\t\t\tkey={`${i}-${j}`}\r\n\t\t\t\t\t\tclassName={classNames({\r\n\t\t\t\t\t\t\t[styles.cell]: true,\r\n\t\t\t\t\t\t\t[styles.on]: val\r\n\t\t\t\t\t\t})}\r\n\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\ttransition: `background-color ${transitionTime}s, box-shadow ${transitionTime}s`,\r\n\t\t\t\t\t\t\ttransitionTimingFunction: 'linear'\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t/>\r\n\t\t\t\t))\r\n\t\t\t)}\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default GameOfLife;\r\n","export default __webpack_public_path__ + \"static/media/Arrow-down.0109150e.svg\";","import React, { useState } from 'react';\r\nimport { isMobile } from 'react-device-detect';\r\n\r\nimport GameOfLife from './GameOfLife';\r\n\r\nimport styles from './Banner.module.scss';\r\nimport arrowDown from './Arrow-down.svg';\r\n\r\nconst HighlightSpan: React.FC = props => {\r\n    return (\r\n        <span>\r\n            {props.children}\r\n        </span>\r\n    )\r\n}\r\n\r\nconst Banner: React.FC = () => {\r\n    //const [ scrollTop, setScrollTop ] = useState(document.body.scrollTop);\r\n    const [ isHovering, setIsHovering ] = useState(false);\r\n    //const scrollEventRef = useRef(false);\r\n    //const debounceRef = useRef(false);\r\n\r\n    /*\r\n    if (!(scrollEventRef.current)) {\r\n        document.body.onscroll = () => {\r\n            if (debounceRef.current && document.documentElement.scrollTop !== 0) return;\r\n            debounceRef.current = true;\r\n            setScrollTop(Math.ceil(document.documentElement.scrollTop / 1000) * 10);\r\n            setTimeout(() => {debounceRef.current = false}, 100);\r\n        }\r\n        scrollEventRef.current = true;\r\n    }\r\n    */\r\n\r\n    const golDim = isMobile ? 15 : 30;\r\n\r\n    return (\r\n        <div className={styles.banner}>\r\n            <div className={styles.bannerBackground}>\r\n                <GameOfLife\r\n                    nRows={golDim}\r\n                    nCols={golDim}\r\n                    cellSize={'1fr'}\r\n                    tickTime={100}\r\n                    spawnTime={1000}\r\n                />\r\n            </div>\r\n            <div\r\n                className={styles.bannerContainer}\r\n                //style={{ backdropFilter: isMobile ? 'none' : `blur(${scrollTop}px)` }}\r\n            >\r\n                <h1>\r\n                    hi, i'm <HighlightSpan>to</HighlightSpan>mmy <HighlightSpan>va</HighlightSpan>dakumchery! <br/>\r\n                    check out my portfol<HighlightSpan>io</HighlightSpan>!\r\n                </h1>\r\n                <button\r\n                    onMouseEnter={() => {setIsHovering(true);}}\r\n                    onMouseOut={() => {setIsHovering(false);}}\r\n                    onClick={() => {\r\n                        const content = document.getElementById('content');\r\n                        content!.scrollIntoView({behavior: 'smooth', block: 'start', inline: 'nearest'});\r\n                    }}\r\n                >\r\n                    check it out!\r\n                </button>\r\n                {!isMobile ? <img src={arrowDown} alt='' className={isHovering ? styles.on : ''}/> : null}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\nexport default Banner;","export default __webpack_public_path__ + \"static/media/LinkedInFill.4ef33cb0.svg\";","export default __webpack_public_path__ + \"static/media/LinkedInOutline.30cfa4c9.svg\";","export default __webpack_public_path__ + \"static/media/GitHubFill.2c411cd1.svg\";","export default __webpack_public_path__ + \"static/media/GitHubOutline.5c1e92ab.svg\";","export default __webpack_public_path__ + \"static/media/ResumeFill.17c94bc9.svg\";","export default __webpack_public_path__ + \"static/media/ResumeOutline.40f4581e.svg\";","export default __webpack_public_path__ + \"static/media/riskystratsIcon.37537746.png\";","export default __webpack_public_path__ + \"static/media/SocialSavageIcon.fbe31635.png\";","export default __webpack_public_path__ + \"static/media/4RealIcon.5f0a655c.png\";","export default __webpack_public_path__ + \"static/media/HIMCMIcon.73332a08.png\";","export default __webpack_public_path__ + \"static/media/DMTCertificate.af9afb79.jpg\";","import React from 'react';\r\n\r\nimport styles from './Content.module.scss';\r\n\r\nimport linkedInFill from './LinkedInFill.svg';\r\nimport linkedInOutline from './LinkedInOutline.svg';\r\nimport gitHubFill from './GitHubFill.svg';\r\nimport gitHubOutline from './GitHubOutline.svg';\r\nimport resumeFill from './ResumeFill.svg';\r\nimport resumeOutline from './ResumeOutline.svg';\r\n\r\nimport riskystratsIcon from './riskystratsIcon.png';\r\nimport socialSavageIcon from './SocialSavageIcon.png';\r\nimport fourRealIcon from './4RealIcon.png';\r\nimport himcmIcon from './HIMCMIcon.png';\r\nimport dmtCertificate from './DMTCertificate.jpg';\r\n\r\ninterface LogoButtonProps {\r\n    fillSrc: string,\r\n    outlineSrc: string,\r\n    href: string,\r\n    label: string\r\n}\r\n\r\nconst LogoButton: React.FC<LogoButtonProps> = props => {\r\n    return (\r\n        <div className={styles.logoButton}>\r\n            <div>\r\n                <a href={props.href} target='_blank' rel='noopener noreferrer'>\r\n                    <img src={props.outlineSrc} alt={props.label} />\r\n                    <img src={props.fillSrc} alt='' />\r\n                </a>\r\n            </div>\r\n            <p>{props.label}</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst FlexRow: React.FC = props => {\r\n    return (\r\n        <div className={styles.flexRow}>\r\n            {props.children}\r\n        </div>\r\n    )\r\n}\r\n\r\nconst Header: React.FC = props => {\r\n    return (\r\n        <h1>\r\n            {props.children}\r\n        </h1>\r\n    )\r\n}\r\n\r\ninterface SectionProps {\r\n    title: string\r\n}\r\n\r\nconst Section: React.FC<SectionProps> = props => {\r\n    return (\r\n        <div className={styles.section}>\r\n            <Header>- {props.title} -</Header>\r\n            {props.children}\r\n        </div>\r\n    )\r\n}\r\n\r\nconst Line: React.FC = props => {\r\n    return (\r\n        <p style={{textIndent: '3vw'}}>\r\n            {props.children}\r\n        </p>\r\n    );\r\n}\r\n\r\ninterface ProjectPanelProps {\r\n    imgSrc: string,\r\n    title: string,\r\n    links: [string, string][]\r\n}\r\n\r\nconst ProjectPanel: React.FC<ProjectPanelProps> = props => {\r\n    return (\r\n        <div className={styles.projectPanel}>\r\n            <img src={props.imgSrc} alt={props.title}/>\r\n            <h2>- {props.title} -</h2>\r\n            <p>{props.children}</p>\r\n            {\r\n                props.links.map(([url, label]) => (\r\n                    <a href={url} style={{color: 'white', textDecoration: 'none'}} target='_blank' rel='noopener noreferrer'>\r\n                        <div className={styles.projectPanelButton}>\r\n                            {label}\r\n                        </div>\r\n                    </a>\r\n                ))\r\n            }\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nconst Content: React.FC = () => {\r\n    return (\r\n        <div\r\n            id='content'\r\n            className={styles.content}\r\n        >\r\n            <Section title='about me'>\r\n                <Line>\r\n                    hi! my name is tommy, and i am an undergraduate studying computer science at the Illinois Institute of Technology.\r\n                    during my free time, i like to work on interesting coding projects! this site serves as a hub for these projects.\r\n                </Line>\r\n                <Line>\r\n                    (if you are wondering, the pattern in the background above is a simulation of Conway's Game of Life.\r\n                    it sporadically spawns new gliders, causing absolute chaos!)\r\n                </Line>\r\n            </Section>\r\n            <Section title='quick links'>\r\n                <FlexRow>\r\n                    <LogoButton\r\n                        label='linkedin'\r\n                        fillSrc={linkedInFill}\r\n                        outlineSrc={linkedInOutline}\r\n                        href='https://www.linkedin.com/in/tommy-vadakumchery-6a4646185/'\r\n                    />\r\n                    <LogoButton\r\n                        label='github'\r\n                        fillSrc={gitHubFill}\r\n                        outlineSrc={gitHubOutline}\r\n                        href='https://www.github.com/tovaio/'\r\n                    />\r\n                    <LogoButton\r\n                        label='résumé'\r\n                        fillSrc={resumeFill}\r\n                        outlineSrc={resumeOutline}\r\n                        href='https://drive.google.com/file/d/1Y7BICg5WEAkP4yulRfcJJnKhidBYj1ii/view?usp=sharing'\r\n                    />\r\n                </FlexRow>\r\n            </Section>\r\n            <Section title='projects'>\r\n                <FlexRow>\r\n                    <ProjectPanel\r\n                        imgSrc={riskystratsIcon}\r\n                        title=\"risky strats\"\r\n                        links={[\r\n                            [\"https://tovaio.github.io/riskystrats\", \"play online!\"],\r\n                            [\"https://github.com/tovaio/riskystrats\", \"github (client)\"],\r\n                            [\"https://github.com/tovaio/riskystrats-server\", \"github (server)\"]\r\n                        ]}\r\n                    >\r\n                        Real-time strategy game based on <a href='https://www.roblox.com/games/316264464/RISKY-STRATS'>this game</a> of the same name.\r\n                        <br/><br/>\r\n                        <em>Currently under development!</em>\r\n                    </ProjectPanel>\r\n                    <ProjectPanel\r\n                        imgSrc={socialSavageIcon}\r\n                        title=\"Social Savage\"\r\n                        links={[\r\n                            [\"https://github.com/tovaio/social-savage\", \"github\"],\r\n                            [\"https://devpost.com/software/socialsavage\", \"devpost\"]\r\n                        ]}\r\n                    >\r\n                        Project for Vandy Hacks VI: Art Edition (2019, Vanderbilt University).\r\n                        <br/><br/>\r\n                        <em>Won \"Best Use of MongoDB Atlas\" (MLH Sponsored Prize)</em>\r\n                    </ProjectPanel>\r\n                    <ProjectPanel\r\n                        imgSrc={fourRealIcon}\r\n                        title=\"4Real\"\r\n                        links={[\r\n                            [\"https://github.com/nexen01/DareMightyThings2019\", \"github\"],\r\n                            [dmtCertificate, \"certificate\"]\r\n                        ]}\r\n                    >\r\n                        Project for Dare Mighty Things Hackathon (2019, Chicago).\r\n                        <br/><br/>\r\n                        <em>Won \"Best of Show\" and \"Best Natural Language Processing Project\" (JLL Sponsored Prize)</em>\r\n                    </ProjectPanel>\r\n                    <ProjectPanel\r\n                        imgSrc={himcmIcon}\r\n                        title=\"Warehouse Model\"\r\n                        links={[\r\n                            [\"https://digitalcommons.imsa.edu/math_sw/5/\", \"read paper\"],\r\n                            [\"http://www.comap-math.com/himcm/2016Certs/7211.pdf\", \"certificate\"]\r\n                        ]}\r\n                    >\r\n                        Paper submitted for the 2016 High School Mathematical Contest in Modelling.\r\n                        <br/><br/>\r\n                        <em>Won \"Outstanding\" designation (Top 9 out of 840 teams in the US and China)</em>\r\n                    </ProjectPanel>\r\n                </FlexRow>\r\n            </Section>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Content;\r\n","import React from 'react';\r\n\r\nimport Banner from './Banner';\r\nimport Content from './Content';\r\n\r\nimport './App.scss';\r\n\r\nconst App: React.FC = () => {\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<Banner />\r\n\t\t\t<Content />\r\n\t\t</>\r\n\t);\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport { ParallaxProvider } from 'react-scroll-parallax';\r\nimport App from './App';\r\n\r\nconst AppContainer: React.FC = () => {\r\n\treturn (\r\n\t\t<ParallaxProvider>\r\n\t\t\t<App/>\r\n\t\t</ParallaxProvider>\r\n\t)\r\n}\r\n\r\nexport default AppContainer;","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config?: Config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(\r\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\r\n      window.location.href\r\n    );\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport AppContainer from './AppContainer';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nimport './fonts.css';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nReactDOM.render(<AppContainer />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"bannerBackground\":\"Banner_bannerBackground__2Cr0j\",\"bannerContainer\":\"Banner_bannerContainer__3oVyn\",\"banner\":\"Banner_banner__D46f7\",\"on\":\"Banner_on__2Wr0g\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"GameOfLife_container__11Qfc\",\"cell\":\"GameOfLife_cell__3hsAu\",\"on\":\"GameOfLife_on__3S_XK\"};"],"sourceRoot":""}