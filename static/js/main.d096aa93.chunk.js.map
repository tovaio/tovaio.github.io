{"version":3,"sources":["Arrow-down.svg","GameOfLife.tsx","Banner.tsx","Content.tsx","App.tsx","AppContainer.tsx","serviceWorker.ts","index.tsx","GameOfLife.module.scss","Banner.module.scss"],"names":["module","exports","mod","n","m","generateGrid","nRows","nCols","rows","i","push","Array","fill","spawnCoords","GameOfLife","props","useState","grid","setGrid","useEffect","simulationInterval","setInterval","oldGrid","newGrid","j","nNeighbors","oi","oj","ni","nj","tickTime","spawnInterval","pi","Math","floor","random","pj","factor","produce","forEach","spawnTime","clearInterval","transitionTime","className","styles","container","style","gridTemplateRows","cellSize","gridTemplateColumns","width","height","map","row","val","key","classNames","cell","on","transition","transitionTimingFunction","HighlightSpan","children","Banner","document","body","scrollTop","setScrollTop","isHovering","setIsHovering","scrollEventRef","useRef","debounceRef","current","onscroll","documentElement","min","setTimeout","golDim","isMobile","banner","bannerBackground","filter","onMouseEnter","onMouseOut","onClick","getElementById","scrollIntoView","behavior","block","inline","src","arrowDown","alt","Navbar","Content","id","zIndex","backgroundColor","margin","padding","fontSize","App","AppContainer","Boolean","window","location","hostname","match","ReactDOM","render","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.d096aa93.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Arrow-down.421908e6.svg\";","import React, { useState, useEffect } from 'react';\r\nimport produce from 'immer';\r\nimport classNames from 'classnames';\r\n\r\nimport styles from './GameOfLife.module.scss';\r\n\r\nconst mod = (n: number, m: number): number => {\r\n  \treturn ((n % m) + m) % m;\r\n};\r\n\r\nconst generateGrid = (nRows: number, nCols: number): boolean[][] => {\r\n\tconst rows = [];\r\n\tfor (let i = 0; i < nRows; i++) {\r\n\t\trows.push(Array(nCols).fill(false));\r\n\t}\r\n\treturn rows;\r\n}\r\n\r\ninterface GameOfLifeProps {\r\n\tnRows: number,\r\n\tnCols: number,\r\n\tcellSize: string,\r\n\ttickTime: number,\r\n\tspawnTime: number,\r\n\tstyle?: React.CSSProperties\r\n}\r\n\r\nconst spawnCoords = [\r\n\t[0, 0],\r\n\t[0, 1],\r\n\t[0, 2],\r\n\t[-1, 2],\r\n\t[-2, 1]\r\n];\r\n\r\nconst GameOfLife: React.FC<GameOfLifeProps> = (props) => {\r\n\tconst [ grid, setGrid ] = useState(() => generateGrid(props.nRows, props.nCols));\r\n\r\n\tuseEffect(() => {\r\n\t\tconst runSimulation = () => {\r\n\t\t\tsetGrid(oldGrid => {\r\n\t\t\t\tconst newGrid = generateGrid(props.nRows, props.nCols);\r\n\t\t\t\t\r\n\t\t\t\tfor (let i = 0; i < props.nRows; i++) {\r\n\t\t\t\t\tfor (let j = 0; j < props.nCols; j++) {\r\n\t\t\t\t\t\t// count neighbors\r\n\t\t\t\t\t\tlet nNeighbors = 0;\r\n\t\t\t\t\t\tfor (let oi = -1; oi < 2; oi++) {\r\n\t\t\t\t\t\t\tfor (let oj = -1; oj < 2; oj++) {\r\n\t\t\t\t\t\t\t\tif (oi === 0 && oj === 0) continue;\r\n\t\r\n\t\t\t\t\t\t\t\tconst ni = mod(i + oi, props.nRows);\r\n\t\t\t\t\t\t\t\tconst nj = mod(j + oj, props.nCols);\r\n\t\t\t\t\t\t\t\tnNeighbors += (oldGrid[ni][nj]) ? 1 : 0;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\tif ((oldGrid[i][j] && (nNeighbors === 2 || nNeighbors === 3))\r\n\t\t\t\t\t\t\t|| (!oldGrid[i][j] && (nNeighbors === 3))) {\r\n\t\t\t\t\t\t\tnewGrid[i][j] = true;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\treturn newGrid;\r\n\t\t\t});\r\n\t\t}\r\n\t\r\n\t\tconst runSpawn = () => {\r\n\t\t\t// pick a random pivot coordinate\r\n\t\t\tconst pi = Math.floor(Math.random() * props.nRows);\r\n\t\t\tconst pj = Math.floor(Math.random() * props.nCols);\r\n\t\t\tconst factor = (-1) ** Math.floor(Math.random() * 2);\r\n\t\r\n\t\t\tsetGrid(oldGrid => {\r\n\t\t\t\treturn produce(oldGrid, newGrid => {\r\n\t\t\t\t\tspawnCoords.forEach(([ oi, oj ]) => {\r\n\t\t\t\t\t\tconst i = mod(pi + oi * factor, props.nRows);\r\n\t\t\t\t\t\tconst j = mod(pj + oj * factor, props.nCols);\r\n\t\t\t\t\t\tnewGrid[i][j] = true;\r\n\t\t\t\t\t});\r\n\t\t\t\t});\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\tconst simulationInterval = setInterval(runSimulation, props.tickTime);\r\n\t\tconst spawnInterval = setInterval(runSpawn, props.spawnTime);\r\n\r\n\t\treturn () => {\r\n\t\t\tclearInterval(simulationInterval);\r\n\t\t\tclearInterval(spawnInterval);\r\n\t\t}\r\n\t}, [props.nRows, props.nCols, props.tickTime, props.spawnTime]);\r\n\r\n\tconst transitionTime = props.tickTime / 1000;\r\n\r\n\treturn (\r\n\t\t<div\r\n\t\t\tclassName={styles.container}\r\n\t\t\tstyle={{\r\n\t\t\t\tgridTemplateRows: `repeat(${props.nRows}, ${props.cellSize})`,\r\n\t\t\t\tgridTemplateColumns: `repeat(${props.nCols}, ${props.cellSize})`,\r\n\t\t\t\twidth: '102vw',\r\n\t\t\t\theight: `${props.nRows / props.nCols * 102}vw`,\r\n\t\t\t\t...props.style\r\n\t\t\t}}\r\n\t\t>\r\n\t\t\t{grid.map((row, i) => \r\n\t\t\t\trow.map((val, j) => (\r\n\t\t\t\t\t<div \r\n\t\t\t\t\t\tkey={`${i}-${j}`}\r\n\t\t\t\t\t\tclassName={classNames({\r\n\t\t\t\t\t\t\t[styles.cell]: true,\r\n\t\t\t\t\t\t\t[styles.on]: val\r\n\t\t\t\t\t\t})}\r\n\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\ttransition: `background-color ${transitionTime}s, box-shadow ${transitionTime}s`,\r\n\t\t\t\t\t\t\ttransitionTimingFunction: 'linear'\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t/>\r\n\t\t\t\t))\r\n\t\t\t)}\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default GameOfLife;\r\n","import React, { useState, useRef } from 'react';\r\nimport { isMobile } from 'react-device-detect';\r\n\r\nimport GameOfLife from './GameOfLife';\r\n\r\nimport styles from './Banner.module.scss';\r\nimport arrowDown from './Arrow-down.svg';\r\n\r\nconst HighlightSpan: React.FC = props => {\r\n    return (\r\n        <span>\r\n            {props.children}\r\n        </span>\r\n    )\r\n}\r\n\r\nconst Banner: React.FC = () => {\r\n    const [ scrollTop, setScrollTop ] = useState(document.body.scrollTop);\r\n    const [ isHovering, setIsHovering ] = useState(false);\r\n    const scrollEventRef = useRef(false);\r\n    const debounceRef = useRef(false);\r\n\r\n    if (!(scrollEventRef.current)) {\r\n        document.body.onscroll = () => {\r\n            if (debounceRef.current && document.documentElement.scrollTop !== 0) return;\r\n            debounceRef.current = true;\r\n            setScrollTop(Math.min(document.documentElement.scrollTop/50, 10));\r\n            setTimeout(() => {debounceRef.current = false}, 75);\r\n        }\r\n        scrollEventRef.current = true;\r\n    }\r\n\r\n    const golDim = isMobile ? 15 : 30;\r\n\r\n    return (\r\n        <div className={styles.banner}>\r\n            <div className={styles.bannerBackground}>\r\n                <GameOfLife\r\n                    nRows={golDim}\r\n                    nCols={golDim}\r\n                    cellSize={'1fr'}\r\n                    tickTime={100}\r\n                    spawnTime={1000}\r\n                    style={{\r\n                        filter: isMobile ? 'none' : `blur(${scrollTop}px)`\r\n                    }}\r\n                />\r\n            </div>\r\n            <h1>\r\n                hi, i'm <HighlightSpan>to</HighlightSpan>mmy <HighlightSpan>va</HighlightSpan>dakumchery! <br/>\r\n                check out my portfol<HighlightSpan>io</HighlightSpan>!\r\n            </h1>\r\n            <button\r\n                onMouseEnter={() => {setIsHovering(true);}}\r\n                onMouseOut={() => {setIsHovering(false);}}\r\n                onClick={() => {\r\n                    const content = document.getElementById('content');\r\n                    content!.scrollIntoView({behavior: 'smooth', block: 'start', inline: 'nearest'});\r\n                }}\r\n            >\r\n                check it out!\r\n            </button>\r\n            {!isMobile ? <img src={arrowDown} alt='' className={isHovering ? styles.on : ''}/> : null}\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\nexport default Banner;","import React from 'react';\r\n\r\nconst Navbar: React.FC = () => {\r\n    return (\r\n        <p></p>\r\n    )\r\n}\r\n\r\nconst Content: React.FC = () => {\r\n    return (\r\n        <div\r\n            id='content'\r\n            style={{\r\n                zIndex: 2,\r\n                backgroundColor: 'white',\r\n                width: '100%',\r\n                margin: 0,\r\n                padding: 0\r\n            }}\r\n        >\r\n            <Navbar/>\r\n            <p style={{fontSize: '24px'}}>\r\n                Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Diam vel quam elementum pulvinar etiam non quam lacus suspendisse. Velit ut tortor pretium viverra suspendisse potenti nullam. Ac turpis egestas sed tempus. Lacus vestibulum sed arcu non odio euismod lacinia. Mauris in aliquam sem fringilla ut. Molestie at elementum eu facilisis sed odio. Potenti nullam ac tortor vitae. Odio pellentesque diam volutpat commodo sed egestas. In hac habitasse platea dictumst vestibulum rhoncus est pellentesque. Sit amet risus nullam eget felis eget. Sit amet facilisis magna etiam tempor orci eu. Vivamus at augue eget arcu dictum. Nisi scelerisque eu ultrices vitae auctor eu augue ut. Nunc eget lorem dolor sed viverra. Ornare arcu dui vivamus arcu felis bibendum ut tristique. Pellentesque nec nam aliquam sem et. Massa ultricies mi quis hendrerit dolor magna eget. Nibh sed pulvinar proin gravida hendrerit lectus a.\r\n                <br/><br/>\r\n                Nisl vel pretium lectus quam. Viverra justo nec ultrices dui sapien eget. Risus quis varius quam quisque id diam vel quam elementum. Vel pharetra vel turpis nunc eget. Egestas maecenas pharetra convallis posuere morbi leo urna molestie. Etiam sit amet nisl purus in. Ut sem nulla pharetra diam sit amet nisl suscipit. Ipsum suspendisse ultrices gravida dictum. Amet cursus sit amet dictum sit. Blandit aliquam etiam erat velit scelerisque in. Sollicitudin nibh sit amet commodo nulla facilisi nullam vehicula. Malesuada fames ac turpis egestas sed. Dolor sit amet consectetur adipiscing elit. Ultrices vitae auctor eu augue ut. Est ullamcorper eget nulla facilisi.\r\n                <br/><br/>\r\n                Dolor morbi non arcu risus quis varius quam quisque. Nullam eget felis eget nunc lobortis mattis aliquam faucibus purus. Massa tempor nec feugiat nisl pretium fusce. Non odio euismod lacinia at quis risus. Odio eu feugiat pretium nibh ipsum consequat nisl. Risus quis varius quam quisque id. Aenean vel elit scelerisque mauris pellentesque pulvinar pellentesque habitant. Est velit egestas dui id. Amet nisl suscipit adipiscing bibendum est ultricies integer. Mattis rhoncus urna neque viverra justo. Magna eget est lorem ipsum dolor sit amet. Molestie ac feugiat sed lectus. Tortor posuere ac ut consequat semper viverra nam.\r\n                <br/><br/>\r\n                Amet cursus sit amet dictum sit. Aliquam purus sit amet luctus. Nascetur ridiculus mus mauris vitae. Tincidunt lobortis feugiat vivamus at augue eget arcu dictum varius. Amet consectetur adipiscing elit pellentesque habitant. Vitae suscipit tellus mauris a diam maecenas. Velit laoreet id donec ultrices tincidunt. Pellentesque dignissim enim sit amet venenatis. Pellentesque habitant morbi tristique senectus et netus et. Risus viverra adipiscing at in tellus integer feugiat scelerisque varius. Neque sodales ut etiam sit amet nisl. Amet cursus sit amet dictum. Dolor purus non enim praesent elementum facilisis leo vel. Risus commodo viverra maecenas accumsan. Ac feugiat sed lectus vestibulum mattis ullamcorper. Sit amet aliquam id diam maecenas ultricies mi eget. Dui ut ornare lectus sit amet est placerat. Ut sem viverra aliquet eget sit amet. Dolor magna eget est lorem ipsum. Enim nulla aliquet porttitor lacus luctus accumsan tortor.\r\n                <br/><br/>\r\n                Ultrices neque ornare aenean euismod. Venenatis tellus in metus vulputate eu scelerisque felis imperdiet. Neque gravida in fermentum et sollicitudin ac orci phasellus egestas. Mi sit amet mauris commodo quis imperdiet. Non quam lacus suspendisse faucibus. A iaculis at erat pellentesque adipiscing commodo elit at. Diam donec adipiscing tristique risus. Sed augue lacus viverra vitae congue eu. Adipiscing tristique risus nec feugiat. Gravida quis blandit turpis cursus in hac. Eget dolor morbi non arcu. Risus viverra adipiscing at in tellus integer feugiat. In nulla posuere sollicitudin aliquam ultrices sagittis.\r\n            </p>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Content;","import React from 'react';\n\nimport Banner from './Banner';\nimport Content from './Content';\n\nimport './App.scss';\n\nconst App: React.FC = () => {\n\treturn (\n\t\t<>\n\t\t\t<Banner />\n\t\t\t<Content />\n\t\t</>\n\t);\n}\n\nexport default App;\n","import React from 'react';\r\nimport { ParallaxProvider } from 'react-scroll-parallax';\r\nimport App from './App';\r\n\r\nconst AppContainer: React.FC = () => {\r\n\treturn (\r\n\t\t<ParallaxProvider>\r\n\t\t\t<App/>\r\n\t\t</ParallaxProvider>\r\n\t)\r\n}\r\n\r\nexport default AppContainer;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport AppContainer from './AppContainer';\nimport * as serviceWorker from './serviceWorker';\n\nimport './fonts.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(<AppContainer />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"GameOfLife_container__RAuyK\",\"cell\":\"GameOfLife_cell__wLm_k\",\"on\":\"GameOfLife_on__2RxBQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"bannerBackground\":\"Banner_bannerBackground__B6wSF\",\"banner\":\"Banner_banner__1vOIW\",\"on\":\"Banner_on__3xDsz\"};"],"sourceRoot":""}